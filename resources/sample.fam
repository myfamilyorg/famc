// Import statement based on semantics, we know this is import because of the fact there's no '{' indiciating trait.
@std::result::Result;

// Trait
@Speak {
	// required method.
	@speak();
	// required method with default impl
	@speak_n_times(n: u32) {
		for(u32 i; i<n; i++) {
			self.speak();
		}
	}
	// static method
	speak_generic() {
		println!("generic noise!");
	}
}

// struct (by inference)
Cat {
	age: u8;
	lives_used: u8;
}

// struct (by inference)
Dog {
	age: u8;
}

// struct (by inference)
Bird {
	age: u8;
}

// implement Speak trait for Cat
@Speak::Cat {
	// implement required function, parameters are infered from above
	speak {
		println!("meow!");
	}
}

// implmeent Speak trait for Dog
@Speak::Dog {
	// implement required function, parameters are infered from above
	speak {
		println!("ruff!");
	}
	// override speak_n_times, parameters are infered from above
	speak_n_times {
		for(u32 i=0; i<n; i++) 
			println!("ruff!");
		println("dog spoke {} times!", n);
	}
}

// implmeent Speak trait for Bird
@Speak::Bird {
	// implement required function, parameters are infered from above
	speak {
		println("chirp!");
	}
}

@Main::MyProg {
	main {
		Ok(0)
	}
}
